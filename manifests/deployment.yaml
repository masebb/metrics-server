apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: metrics-servers
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      name: prometheus
      namespace: metrics-servers
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:v2.42.0
        ports:
          - containerPort: 9090
        volumeMounts:
          - name: prometheus-data
            mountPath: "/prometheus"
          - name: prometheus-configs
            mountPath: "/etc/prometheus"
          # - name: prometheus-rules
          #   mountPath: "/etc/prometheus/rules"
          #   readOnly: true
      volumes:
        - name: prometheus-data
          persistentVolumeClaim:
            claimName: prometheus-pvc
        - name: prometheus-configs
          projected:
            sources:
              - configMap:
                  name: prometheus
              - configMap:
                  name: sd-cadvisor
              - configMap:
                  name: sd-node
              - configMap:
                  name: sd-snmp-ifmib
              - configMap:
                  name: sd-snmp-nec-ix
        # - name: prometheus-rules
        #   projected:
        #     sources: 
        #       - configMap:
        #           name: rules-cadvisor
        #       - configMap:
        #           name: rules-node
        #       - configMap:
        #           name: rules-prometheus
        #       - configMap:
        #           name: rules-blackbox
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-pvc
  namespace: metrics-servers
  labels:
    app: prometheus
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
